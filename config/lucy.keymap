/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include "./boards/shields/lucy/italian.keycodes"

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT                 0

#define UTILITY                 1

#define SYMBOLS                 2

#define NUM_FUNC                3

#define KEYBOARD                4

#define QWERTY                  5

#define GAMING                  6

#define EXTRA                   7

// ------------------------------
// I need a copy for every layer because I cannot activate lower number layers

#define DEFAULT_US              8

#define SYMBOLS_US              9

#define UTILITY_US              10

#define EXTRA_US                11


// Global mod-tap configuration
&mt {
    //tapping-term-ms = <300>;
    //quick_tap_ms = <0>;
    //flavor = "tap-preferred";
    //retro-tap;
};

/ {

/********************************************************
*   MACROS
*********************************************************/

    macros {
           gmail: gmail {
               label = "gmail_email";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp S &kp A &kp B &kp B &kp I &kp O
                   >
                   ;
           };

            // I don't know why but this doesn't work
           linux_reboot: linux_reboot {
                label = "reboot_linux_system_with_SysRq";
                compatible = "zmk,behavior-macro";
                #binding-cells = <0>;
                wait-ms = <500>;
                tap-ms = <40>;
                bindings
                     = <&macro_press &kp LALT>
                     , <&macro_press &kp PRINTSCREEN>
                     , <&kp R &kp E>
                     , <&kp I>
                     , <&kp S>
                     , <&kp U>
                     , <&kp B>
                     , <&macro_release &kp LALT>
                     , <&macro_release &kp PRINTSCREEN>
                     ;
           };

           macro_par: macro_parentheses {
               label = "macro_parentheses";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp IT_LPAR &kp IT_RPAR
                   >
                   ;
           };

           macro_bkt: macro_brackets {
               label = "macro_brackets";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp IT_LBKT &kp IT_RBKT
                   >
                   ;
           };

           macro_brc: macro_braces {
               label = "macro_braces";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp IT_LBRC &kp IT_RBRC
                   >
                   ;
           };

           macro_ang: macro_angulars {
               label = "macro_angulars";
               compatible = "zmk,behavior-macro";
               #binding-cells = <0>;
               wait-ms = <30>;
               tap-ms = <40>;
               bindings
                   = <
                   &kp IT_LESS &kp IT_GREAT
                   >
                   ;
           };
       };

/********************************************************
*   COMBOS
*********************************************************/

    combos {
        compatible = "zmk,combos";

        // Get back to default layer by pressing both thumb keys
        combo_escape_qwerty {
            timeout-ms = <100>;
            layers= <QWERTY>;
            key-positions = <30 35>;
            bindings = <&to DEFAULT>;
        };

        // easier to hit
        combo_escape_qwerty2 {
            timeout-ms = <150>;
            layers= <QWERTY>;
            key-positions = <16 17 18 19>;
            bindings = <&to DEFAULT>;
        };

        // combo to tab in qwerty
        combo_tab_qwerty {
            timeout-ms = <75>;
            layers = <QWERTY>;
            key-positions = <10 11>;
            bindings = <&kp TAB>;
        };

   };

/********************************************************
*   CONDITIONAL LAYERS
*********************************************************/

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_keyboard_layer {
            if-layers = <UTILITY SYMBOLS>;
            then-layer = <NUM_FUNC>;
        };
        tri_keyboard_us_layer {
            if-layers = <UTILITY SYMBOLS_US>;
            then-layer = <NUM_FUNC>;
        };

    };

/********************************************************
*   BEHAVIORS
*********************************************************/

    behaviors {

        /***********************************************
        *   AUTOSHIFT
        ***********************************************/
        #define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro

        as: auto_shift {
                    compatible = "zmk,behavior-hold-tap";
                    label = "AUTO_SHIFT";
                    #binding-cells = <2>;
                    tapping_term_ms = <180>;
                    quick_tap_ms = <125>;
                    global-quick-tap;
                    flavor = "tap-preferred";
                    bindings = <&kp>, <&kp>;
        };

        /*************************************************/

        // Delete with backspace + shift
        bspc_del: backspace_delete {
                    compatible = "zmk,behavior-mod-morph";
                    label = "BACKSPACE_DELETE";
                    #binding-cells = <0>;
                    bindings = <&kp BACKSPACE>, <&kp DELETE>;
                    mods = <(MOD_LSFT|MOD_RSFT)>;
                    keep-mods = <0>;
        };

        // Behaviors for home row layers toggle

        llt: left_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // 250
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        rlt: right_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_LAYERS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    //250
            quick_tap_ms = <80>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]

        };

        // Behaviors for mods in the bottom row

        lm: left_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_LEFT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <80>;        // 125
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;    // <---[[right-hand keys]]
        };

        rm: right_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "MODS_RIGHT";
            #binding-cells = <2>;
            //flavor = "tap-unless-interrupted";
            flavor = "tap-preferred";
            tapping-term-ms = <170>;
            quick-tap-ms = <80>;        // 125
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;    // <---[[left-hand keys]]
       };

    // Layer on left thumb is for quick access to symbols used while typing so I need a shorter window for triggering
    // the hold behavior. This is possible as RETURN is not used in the middle of something. Balanced behavior is perfect here
        qlt: quick_layer_toggle {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_LAYER_TOGGLE";
            #binding-cells = <2>;
            tapping-term-ms = <125>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
       };

       // Tap-Dances for accented letters

        td_e: tap_dance_e {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_E";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            //bindings = <&kp E>, <&kp IT_EGRV>, <&kp IT_EACU>;
            bindings = <&kp IT_EGRV>, <&kp IT_EACU>;
        };

        td_oa: tap_dance_o_a {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_O_A";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp IT_OGRV>, <&kp IT_AGRV>;
        };

        td_iu: tap_dance_i_u {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_I_U";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp IT_IGRV>, <&kp IT_UGRV>;
        };

        td_par: tap_dance_parentheses {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PARENTHESES";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            //bindings = <&kp IT_LPAR>, <&macro_par>, <&kp IT_RPAR>;
            bindings = <&kp IT_LPAR>, <&kp IT_RPAR>;
        };

        td_par_us: tap_dance_parentheses_us {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_PARENTHESES_US";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            //bindings = <&kp IT_LPAR>, <&macro_par>, <&kp IT_RPAR>;
            bindings = <&kp LPAR>, <&kp RPAR>;
        };

        td_bkt: tap_dance_brackets {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKETS";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            //bindings = <&kp IT_LBKT>, <&macro_bkt>, <&kp IT_RBKT>;
            bindings = <&kp IT_LBKT>, <&kp IT_RBKT>;
        };

        td_bkt_us: tap_dance_brackets_us {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACKETS_US";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            //bindings = <&kp IT_LBKT>, <&macro_bkt>, <&kp IT_RBKT>;
            bindings = <&kp LBKT>, <&kp RBKT>;
        };

        td_brc: tap_dance_braces {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACES";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            //bindings = <&kp IT_LBRC>, <&macro_brc>, <&kp IT_RBRC>;
            bindings = <&kp IT_LBRC>, <&kp IT_RBRC>;
        };

        td_brc_us: tap_dance_braces_us {
           compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BRACES_US";
            #binding-cells = <0>;
            tapping-term-ms = <180>;
            //bindings = <&kp IT_LBRC>, <&macro_brc>, <&kp IT_RBRC>;
            bindings = <&kp LBRC>, <&kp RBRC>;
        };

        td_ang: tap_dance_angulars_simplifed {
           compatible = "zmk,behavior-tap-dance";
           label = "TAP_DANCE_ANGULARS_SIMPLIFIED";
           #binding-cells = <0>;
           tapping-term-ms = <200>;
           //bindings = <&kp IT_LESS>, <&macro_ang>, <&kp IT_GREAT>;
           bindings = <&kp IT_LESS>, <&kp IT_GREAT>;
        };

        td_ang_us: tap_dance_angulars_simplifed_us {
           compatible = "zmk,behavior-tap-dance";
           label = "TAP_DANCE_ANGULARS_SIMPLIFIED_US";
           #binding-cells = <0>;
           tapping-term-ms = <200>;
           //bindings = <&kp IT_LESS>, <&macro_ang>, <&kp IT_GREAT>;
           bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        };

        td_currencies: tap_dance_currencies {
           compatible = "zmk,behavior-tap-dance";
           label = "TAP_DANCE_CURRENCIES";
           #binding-cells = <0>;
           tapping-term-ms = <200>;
           bindings = <&kp IT_USD>, <&kp IT_EUR>, <&kp IT_PND>, <&kp IT_YEN>;
        };

        td_currencies_us: tap_dance_currencies_us {
           compatible = "zmk,behavior-tap-dance";
           label = "TAP_DANCE_CURRENCIES_US";
           #binding-cells = <0>;
           tapping-term-ms = <200>;
           bindings = <&kp DOLLAR>, <&kp IT_EUR>, <&kp IT_PND>, <&kp IT_YEN>;
        };

    };


/********************************************************
*   KEYMAP
*********************************************************/
        keymap {
                compatible = "zmk,keymap";

/*********************************************
*   DEFAULT layer with COLEMAK-DH
**********************************************/

       		default_layer {
		bindings = <
		&kp Q               &kp W               &kp F               &kp P               &kp B           &kp J               &kp L               &kp U               &kp Y               &bspc_del
		&kp A               &kp R               &kp S               &kp T               &kp G           &kp M               &kp N               &kp E               &kp I               &kp O
		&lm LSHIFT Z        &lm LCTRL X         &lm LALT C          &lm LGUI D          &kp V           &kp K               &rm LGUI H          &rm LALT CMMA       &rm LCTRL DOT       &rm LSHIFT IT_SQUOT
                                                &qlt SYMBOLS RET    &mo EXTRA           &none           &none               &mo KEYBOARD        &lt UTILITY SPC
		>;
		};

/*********************************************
*   UTILITY LAYER
*********************************************/
// &kp K_COPY &kp K_PASTE &kp K_CUT don't work

		    utility_layer {
		bindings = <
		&kp ESC             &kp PRINTSCREEN     &caps_word          &kp CAPS            &kp INSERT      &kp PAGE_UP         &kp HOME            &kp END             &kp END             &kp DEL
		&kp TAB             &sk LALT            &sk LCTRL           &sk LSHIFT          &sk LGUI        &kp LA(TAB)         &kp LEFT            &kp UP              &kp DOWN            &kp RIGHT
		&kp LC(Z)           &kp LC(X)           &kp LC(C)           &kp LC(V)           &kp LC(LS(Z))   &kp PAGE_DOWN       &kp LC(LS(TAB))     &kp LC(LA(LEFT))    &kp LC(LA(RIGHT))   &kp LC(TAB)
                                                &trans              &trans              &trans          &trans              &trans              &none
		>;
		};

/*********************************************
*   SYMBOLS
*********************************************/

// &td_ang             &td_brc             &td_bkt             &td_par
// &kp IT_PERC         &kp IT_EUR          &kp IT_PND          &kp IT_TILDE
           symbols_layer {
		bindings = <
		&kp IT_EXCL         &kp IT_DQUOT        &kp IT_AGRV         &kp IT_UGRV         &kp IT_CARET    &kp IT_BSLH         &kp IT_AT           &kp IT_HASH         &kp IT_QUES         &kp LC(BKSP)
		&td_ang             &kp IT_IGRV         &kp IT_OGRV         &td_e               &kp IT_DEGREE   &td_currencies      &kp IT_EQL          &kp IT_FSLH         &kp IT_MINUS        &kp IT_UNDER
		&kp IT_PERC         &td_brc             &td_bkt             &td_par             &kp IT_TILDE    &kp IT_BKTK         &kp IT_AND          &kp IT_PIPE         &kp IT_AST          &kp IT_PLUS
                                                &none               &trans              &trans          &trans              &trans              &trans
		>;
		};

/*********************************************
*   NUMBERS/SYMBOLS
*********************************************/

		    numbers_functions_layer {
		bindings = <
		&kp DOT             &kp N7              &kp N8              &kp N9             &trans          &kp F10             &kp F7              &kp F8              &kp F9              &kp BKSP
        &kp N0              &kp N1              &kp N2              &kp N3             &trans          &none               &kp F4              &kp F5              &kp F6              &kp F11
        &kp COMMA           &kp N4              &kp N5              &kp N6             &trans          &trans              &kp F1              &kp F2              &kp F3              &kp F12
                                                &trans              &trans             &trans          &trans              &trans              &trans
		>;
		};

// KEYBOARD LAYER
// reset and bootloader must be present on both sides as they only work on the side where they are pressed
		    keyboard_layer {
		bindings = <
		&reset              &bootloader         &kp K_VOLUME_DOWN   &kp K_VOLUME_UP     &none           &none               &kp C_BRI_INC       &kp C_BRI_DEC       &bootloader         &reset
		&kp K_STOP2         &kp K_PREV          &kp K_NEXT          &kp K_PLAY_PAUSE    &out OUT_USB    &out OUT_BLE        &bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3
		&bt BT_CLR          &none               &none               &none               &none           &none               &to QWERTY          &to GAMING          &none               &bt BT_SEL 4
                                                &trans              &trans              &trans          &trans              &trans              &trans
		>;
		};

/*********************************************
*   QWERTY
*********************************************/

       		qwerty_layer {
		bindings = <
		&kp Q               &kp W               &kp E               &kp R               &kp T           &kp Y               &kp U               &kp I               &kp O               &kp P
		&kp A               &kp S               &kp D               &kp F               &kp G           &kp H               &kp J               &kp K               &kp L               &kp BKSP
		&kp Z               &kp X               &kp C               &kp V               &kp B           &kp M               &mt LGUI N          &mt LALT CMMA       &mt LCTRL DOT       &mt LSHFT IT_MINUS
                                                &kp SPC             &to DEFAULT         &none           &none               &none               &kp RET
		>;
		};

/*********************************************
*   GAMING
*********************************************/

           	gaming_layer {
    	bindings = <
    	&kp TAB             &kp Q               &kp W               &kp E               &kp R           &kp T               &kp Y               &kp UP              &kp U               &kp I
    	&kp LSHIFT          &kp A               &kp S               &kp D               &kp F           &kp G               &kp LEFT            &kp DOWN            &kp RIGHT           &kp P
    	&kp LCTRL           &kp Z               &kp X               &kp C               &kp V           &kp B               &kp M               &kp N               &kp L               &kp J
                                                &kp SPC             &to DEFAULT         &none           &none               &none               &kp RET
    	>;
    	};

/*********************************************
*   EXTRA
*********************************************/

        #define NONE_ROW &none &none &none &none &none

           	extra_layer {
    	bindings = <
    	NONE_ROW NONE_ROW
    	&none &none &kp LSHIFT &kp LCTRL &to DEFAULT_US NONE_ROW
    	NONE_ROW NONE_ROW
        &none             &none         &none           &none               &none               &none
    	>;
    	};

/*********************************************
*   DEFAULT US LAYOUT
*********************************************/

            default_us_layer {
		bindings = <
		&kp Q               &kp W               &kp F               &kp P               &kp B           &kp J               &kp L               &kp U               &kp Y               &bspc_del
		&lm LSHIFT A        &kp R               &kp S               &kp T               &kp G           &kp M               &kp N               &kp E               &kp I               &lm LSHIFT O
		&lm LSHIFT Z        &lm LCTRL X         &lm LALT C          &lm LGUI D          &kp V           &kp K               &rm LGUI H          &rm LALT CMMA       &rm LCTRL DOT       &rm LSHIFT SINGLE_QUOTE
                                                &qlt SYMBOLS_US RET &mo EXTRA_US        &none           &none               &mo KEYBOARD        &lt UTILITY_US SPC
		>;
		};

/*********************************************
*   SYMBOLS US LAYOUT
*********************************************/

           symbols_us_layer {
		bindings = <
		&kp EXCL            &kp DOUBLE_QUOTES   &kp BACKSLASH       &kp CARET           &none           &none               &kp AT              &kp HASH            &kp QUESTION        &kp LC(BKSP)
		&td_ang_us          &td_iu              &td_oa              &td_e               &kp IT_DEGREE   &td_currencies_us   &kp EQUAL           &kp SLASH           &kp MINUS           &kp UNDER
		&kp LS(N5)          &td_brc_us          &td_bkt_us          &td_par_us          &kp TILDE       &kp IT_BKTK         &kp AMPS            &kp PIPE            &kp ASTERISK        &kp PLUS
                                                &none               &trans              &trans          &trans              &trans              &trans
		>;
		};


/*********************************************
*   UTILITY US LAYER
*********************************************/

		    utility_us_layer {
		bindings = <
		&kp ESC             &kp PRINTSCREEN     &caps_word          &kp CAPS            &kp INSERT      &kp PAGE_UP         &kp HOME            &kp END             &kp END             &kp DEL
		&kp TAB             &sk LALT            &sk LCTRL           &sk LSHIFT          &sk LGUI        &kp LA(TAB)         &kp LEFT            &kp UP              &kp DOWN            &kp RIGHT
		&kp LC(Z)           &kp LC(X)           &kp LC(C)           &kp LC(V)           &kp LC(LS(Z))   &kp PAGE_DOWN       &kp LGUI            &kp LC(LA(LEFT))    &kp LC(LA(RIGHT))   &kp LC(TAB)
                                                &trans              &trans              &trans          &trans              &trans              &none
		>;
		};

/*********************************************
*   EXTRA US
*********************************************/

           	extra_us_layer {
    	bindings = <
    	NONE_ROW NONE_ROW
    	&none &none &kp LSHIFT &kp LCTRL &to DEFAULT NONE_ROW
    	NONE_ROW NONE_ROW
        &none             &none         &none           &none               &none               &none
    	>;
    	};

    };

};

